#!/bin/bash

# PBS directives
#PBS -q studenti
#PBS -l nodes=8:ppn=8
#PBS -N progetto1_pbs
#PBS -o progetto1_pbs.out
#PBS -e progetto1_pbs.err

# Ottieni l'orario corrente in secondi
# current_time=$(date -u +%s)

# Specifica i nomi dei file con l'orario in secondi nei PBS directives


# Some information about the job can be placed here
# Calculate the number of CPUs
sort -u $PBS_NODEFILE > hostlist
NCPU=$(wc -l < hostlist)

echo "---------------------------"
echo "This job is allocated on $NCPU CPU(s)."
echo "Job is running on node(s):"
cat hostlist

PBS_O_WORKDIR=$PBS_O_HOME/Progetto1
echo "----------------------"
echo "PBS: qsub is running on $PBS_O_HOST"
echo "PBS: originating queue is $PBS_O_QUEUE"
echo "PBS: executing queue is $PBS_QUEUE"
echo "PBS: working directory is $PBS_O_WORKDIR"
echo "PBS: execution mode is $PBS_ENVIRONMENT"
echo "PBS: job identifier is $PBS_JOBID"
echo "PBS: job name is $PBS_JOBNAME"
echo "PBS: node file is $PBS_NODEFILE"
echo "PBS: current home directory is $PBS_O_HOME"
echo "PBS: PATH = $PBS_O_PATH"
echo "----------------------"

# Elenco dei valori da testare per P e STRATEGY
P_VALUES=(1 2 3 4 5 6 7 8)
STRATEGY_VALUES=(0 1 2 3)

# Inizializza il valore di N

# Compila il programma C
echo "Compilazione di $PBS_O_WORKDIR/progetto1.c"
/usr/lib64/openmpi/1.4-gcc/bin/mpicc -o $PBS_O_WORKDIR/progetto1 $PBS_O_WORKDIR/progetto1.c

# Loop su STRATEGY e valori di P
for STRATEGY in "${STRATEGY_VALUES[@]}"; do
  for P in "${P_VALUES[@]}"; do
    # Controlla se P è uguale a 1 o una potenza di 2 quando STRATEGY è 2 o 3
    if [[ "$STRATEGY" == "2" || "$STRATEGY" == "3" ]]; then
      if [[ $P -ne 1 && $((P & (P - 1))) -ne 0 ]]; then
        continue
      fi
    fi
    # Controlla se P > 1 e STRATEGY è 0, quindi interrompi il ciclo P
    if [[ "$STRATEGY" == "0" && $P -gt 1 ]]; then
      break  # Esci dal ciclo P
    fi
    N=100 
    # Ciclo fino a raggiungere il numero massimo di interi
    while [ $N -lt 100000000 ]; do
      N_tmp=$N
      N_tmp_max=$((N * 16))
      while [ $N_tmp -le $N_tmp_max ]; do
        echo "Esecuzione 10 volte di $PBS_O_WORKDIR/progetto1 con STRATEGY=$STRATEGY, P=$P, N=$N_tmp"
        for ((i = 1; i <= 10; i++)); do
          /usr/lib64/openmpi/1.4-gcc/bin/mpiexec -machinefile hostlist -np $P $PBS_O_WORKDIR/progetto1 $N_tmp $STRATEGY
        done
        N_tmp=$((N_tmp * 2))  # Moltiplica N per 2 per la prossima iterazione
      done
      N=$((N * 10))  # Moltiplica N per 10 per la prossima iterazione
    done
  done
done
